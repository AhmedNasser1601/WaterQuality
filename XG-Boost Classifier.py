# XG-Boost Classifier

# -*- coding: utf-8 -*-
"""XGBOOT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-n9EHMwQaxv7j_lQrOK-_wUznEbphWV1
"""

import pandas as pd
from sklearn import preprocessing
from xgboost import XGBClassifier
from sklearn.model_selection import train_test_split

# loading csv file
file_path = "waterQuality1.csv"
dataset = pd.read_csv(file_path)
dataset.head()

# normalization step
for i in dataset.columns:
    dataset[i] = (dataset[i]-dataset[i].min()) / (dataset[i].max()-dataset[i].min())

dataset["ph"].fillna(value=dataset["ph"].mean(), inplace=True)
dataset["Hardness"].fillna(value=dataset["Hardness"].mean(), inplace=True)
dataset["Chloramines"].fillna(value=dataset["Chloramines"].mean(), inplace=True)
dataset["Conductivity"].fillna(value=dataset["Conductivity"].mean(), inplace=True)
dataset["Organic_carbon"].fillna(value=dataset["Organic_carbon"].mean(), inplace=True)
dataset["Turbidity"].fillna(value=dataset["Turbidity"].mean(), inplace=True)
dataset['Trihalomethanes'].fillna(value=dataset['Trihalomethanes'].mean(), inplace=True)
dataset["Sulfate"].fillna(value=dataset["Sulfate"].mean(), inplace=True)

dataset.drop_duplicates(keep='first', inplace=True)   # remove duplicates

X = dataset.drop('Potability', axis=1)
Y = dataset.Potability
x_scaled = preprocessing.scale(X)

# splitting the data
X_train, X_test, y_train, y_test = train_test_split(x_scaled, Y, test_size=0.22, shuffle=True, random_state=42)

xgb_clf = XGBClassifier().fit(X_train, y_train)

print("Testing Accuracy: ", (xgb_clf.score(X_test, y_test) *100), '%')
